# -*- coding: utf-8 -*-
"""options_strategy_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RQkCsudgA9jqpO9R7fMxTIxFI7tS49WN
"""

import streamlit as st

st.set_page_config(page_title="Options Strategy Suggester", layout="centered")

def get_intraday_strategy(strength, vega, theta, oi):
    if strength < 1:
        if vega == "Bullish" and theta == "Bullish":
            return "Buy ATM Call Option (Quick Move Expected)"
        elif vega == "Bullish":
            return "Buy Call Option or Bull Call Spread"
        elif theta == "Bullish":
            return "Sell Put Option or Short Straddle"
        else:
            return "No Trade / Wait & Watch"
    elif 1 <= strength <= 3:
        if vega == "Bullish":
            return "Buy Call Option / Debit Spread"
        elif theta == "Bullish":
            return "Credit Spread / Sell Puts"
        else:
            return "Iron Condor (Neutral Expectation)"
    else:
        if vega == "Bullish":
            return "Buy Call / Momentum Trade"
        elif theta == "Bullish":
            return "Short Puts / Intraday Scalping"
        else:
            return "Directional Trade with Tight SL"

def get_positional_strategy(strength, vega, theta, oi):
    if strength > 3 and oi == "Bullish":
        if vega == "Bullish":
            return "Long Futures + Protective Call or LEAPS Call Buy"
        elif theta == "Bullish":
            return "Bull Put Spread or Covered Call"
        else:
            return "Trend-Following via Long Futures"
    elif 1 <= strength <= 3:
        if vega == "Bullish":
            return "Buy Call or Diagonal Call Spread"
        elif theta == "Bullish":
            return "Credit Spread or Put Writing"
        else:
            return "Straddle / Strangle with Hedging"
    else:
        if vega == "Bearish" and theta == "Bullish":
            return "Sell Options (Iron Condor or Strangle)"
        else:
            return "Avoid Positional Entry - Trend Not Strong"

def input_section(index_name):
    st.subheader(f"{index_name} Data Input")
    strength = st.number_input(f"{index_name} Strength", min_value=0.0, step=0.1, format="%.2f")
    vega = st.selectbox(f"{index_name} Vega", ["Bullish", "Sideways", "Bearish"])
    theta = st.selectbox(f"{index_name} Theta", ["Bullish", "Sideways", "Bearish"])
    oi = st.selectbox(f"{index_name} OI", ["Bullish", "Sideways", "Bearish"])

    if st.button(f"Get {index_name} Strategies"):
        intraday = get_intraday_strategy(strength, vega, theta, oi)
        positional = get_positional_strategy(strength, vega, theta, oi)

        st.success(f"ðŸ”¹ **Intraday Strategy**: {intraday}")
        st.info(f"ðŸ”¸ **Positional Strategy**: {positional}")

# App UI
st.title("ðŸ“ˆ Options Trading Strategy Recommender")
st.markdown("Enter option sentiment parameters to get **Intraday** and **Positional** strategy recommendations.")

for index in ["NIFTY", "BANKNIFTY", "SENSEX"]:
    input_section(index)
    st.markdown("---")